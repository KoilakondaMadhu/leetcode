public class Solution {
    // Method to find the minimum length of a string after removing similar characters from both ends
    public int minimumLength(String s) {
        int begin = 0; // Pointer to the beginning of the string
        int end = s.length() - 1; // Pointer to the end of the string

        // Delete similar characters from both ends until they differ or meet in the middle
        while (begin < end && s.charAt(begin) == s.charAt(end)) {
            char c = s.charAt(begin); // Record the character at the beginning

            // Delete consecutive occurrences of c from the prefix
            while (begin <= end && s.charAt(begin) == c) {
                begin++; // Move begin pointer to the right
            }

            // Delete consecutive occurrences of c from the suffix
            while (end > begin && s.charAt(end) == c) {
                end--; // Move end pointer to the left
            }
        }

        // Return the number of remaining characters
        return end - begin + 1; // Length of remaining substring
    }
}
